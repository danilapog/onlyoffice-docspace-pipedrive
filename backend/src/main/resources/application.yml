app:
  base-url: ${BASE_URL}
  frontend-url: ${FRONTEND_URL}

pipedrive:
  base-url: https://app.pipedrive.com
  base-api-url: https://api.pipedrive.com

db:
  encryption:
    password: ${DB_ENCRYPTION_PASSWORD} || ${PIPEDRIVE_CLIENT_ID}
    salt: ${DB_ENCRYPTION_SALT} || ${PIPEDRIVE_CLIENT_SECRET}

spring:
  security:
    oauth2:
      client:
        registration:
          pipedrive:
            provider: pipedrive
            client-id: ${PIPEDRIVE_CLIENT_ID}
            client-secret: ${PIPEDRIVE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          pipedrive:
            authorization-uri: https://oauth.pipedrive.com/oauth/authorize
            token-uri: https://oauth.pipedrive.com/oauth/token
            user-info-uri: https://api.pipedrive.com/v1/users/me
            user-name-attribute: data
    jwt:
      client-name-attribute: companyId
      user-name-attribute: userId
  jpa:
    hibernate:
      ddl-auto: validate
  datasource:
    url: jdbc:postgresql://localhost:5432/onlyoffice_pipedrive
    username: onlyoffice
    password: onlyoffice
    hikari:
      schema: public
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS public
      connection-timeout: 10000
  liquibase:
    changelog: classpath://db/changelog/db.changelog-master.xml
